[
  {
    "objectID": "lectures/lecture2-distributions/Characteristics of Distributions Activity.html",
    "href": "lectures/lecture2-distributions/Characteristics of Distributions Activity.html",
    "title": "Characteristics of Distributions Activity",
    "section": "",
    "text": "Taken from: http://www.sthda.com/english/wiki/ggplot2-histogram-plot-quick-start-guide-r-software-and-data-visualization Additional resources: https://ggplot2.tidyverse.org/reference/geom_histogram.html\n\n\n\nFirst, we need to install a good-quality graphical display library:\n\nIf you have not installed the ggplot2 package, you can do so by typing install.packages(\"ggplot2\"). Answer yes when prompted.\nType library(ggplot2) into the Console after the installation has finished - this loads the package into memory\n\n\n\n\nggplot is the basic graphing function that you will use over and over again.\nWe can create a basic histogram of the miles per gallon (a measure of fuel efficiency in automobiles) with:\nggplot(mtcars, aes(x=mpg)) + geom_histogram()\nThe ggplot function has three components:\n\nDataset being used (in this case, the built-in test dataset for R called mtcars)\nThe data you intend to display (named inside of the aes() part)\nThe type of graphical display you wish to make (appended after the ggplot() function with a + sign)\n\nHowever, the default ggplot settings often are not so great. In particular, the bindwidth for this histogram is not that well chosen.\nTo alter the binwidth, we can set each bin to equal a set number of mpg (miles per gallon):\nggplot(mtcars, aes(x=mpg)) + geom_histogram(binwidth=1)\n\nPlay around with the binwidth, try to find something that you feel accurately captures the distribution of the data.\n\n\nWhat is the shape, center, and spread of this data? Are there any outliers?\nHow does changing the binwidth affect your answers to these questions?\n\nTo properly label the graph, we add the following amendments:\nggplot(mtcars, aes(x=mpg)) + geom_histogram() + labs(x\"MPG\", y=\"Count\", title=\"MPG of the cars in this dataset\")\nYou can see here that additional layers on top of the graph are created with each + sign. So the first part of the ggplot() function specifies the data to be used and the additional + each create a layer on top of the graph.\n\n\n\nNow maybe we want to add a mean line. We can do so with the following command:\np <- ggplot(mtcars, aes(x=mpg)) +  geom_histogram() + labs(x=\"MPG\", y=\"Count\", title=\"MPG of the cars in this dataset\")\nIn this case, we are saving the output of the graph to a new variable, called p\nNow we can add a vertical line at the mean of mpg with the following command:\np + geom_vline(aes(xintercept=mean(mpg)), color=\"red\", linetype=\"dashed\", size=1)\nOr we can change the histogram type to be a density plot instead of a count plot:\np <- ggplot(mtcars, aes(x=mpg)) + geom_histogram(aes(y = ..density..)) + labs(x=\"MPG\", y=\"Density\", title=\"MPG of the cars in this dataset\")\nNote that this overwrites the previous value of p\n\nThink about the difference between a density plot and the previous plots we have produced\n\nYou can then overlay a density layer to get another view of the distribution of the data:\np + geom_density(alpha=.2, fill=\"#FF6666\")\n\n\n\nWe can also differentiate mpg by a categorical variable (number of cylinders in a car) via the following steps:\n\nFirst, we need to let R know that cyl is a categorical variable\n\nmtcars$cyl <- factor(mtcars$cyl)\nR generally does not know if a variable is a categorical one or not unless you tell it directly. factor() is the method of converting a quantitative variable to a categorical variable.\n\nThen we can create histograms that vary by cylinder:\n\nggplot(mtcars, aes(x=mpg, color=cyl))  +  geom_histogram(fill=\"white\") + labs(x=\"MPG\", y=\"Count\", title=\"MPG of cars in the MPG Dataset\")\nHere the color aspect of aes() indicates that the color should be changed according to each group of the variable cylinder\n\nPlay around with the binwidth and add a density layer. How would you interpret this new information?\n\n\nNext we want to create group means for each cylinder (i.e. what is the mean weight of each category of cylinders). To do so, we need the following commands (don’t worry about understanding it, we’ll learn more about this later):\n\nlibrary(plyr)\nmu <- ddply(mtcars, \"cyl\", summarise, grp.mean=mean(mpg))\nhead(mu)\nYou should get the following output:\n  cyl grp.mean\n1   4 26.66364\n2   6 19.74286\n3   8 15.10000\nNow we can add a mean line to each of the categories:\nggplot(mtcars, aes(x=mpg, color=cyl))  + geom_histogram(fill=\"white\") + labs(x=\"MPG\", y=\"Count\", title=\"MPG of cars in the MPG Dataset\") + geom_vline(data=mu, aes(xintercept=grp.mean, color=cyl), linetype=\"dashed\")\n\n\n\n\nTo learn more about each of the variables in the dataset, you can examine the dataset (and any function documentation in R) by entering ?mtcars\nFor the variables hp and wt, estimate or guess the shape, center and spread of the variables before examining your data. You can think about the following characteristics while you consider the issue:\n\nShape\n\nSkew\nModes\n\nCenter\n\nMean\nMedian\n\nSpread\n\nRange\nIQR\nStandard deviation\n\n\nNext, create some histograms to assess whether you are correct or not.\nAlso think about:\n\nDo you think either of these variables meaningfully vary in their distribution by one of the categorical variables? Why or why not?\nDo you see any outliers? Would either of these variables benefit from reexpressions?"
  },
  {
    "objectID": "lectureactivities/Characteristics of Distributions Activity.html",
    "href": "lectureactivities/Characteristics of Distributions Activity.html",
    "title": "Characteristics of Distributions Activity",
    "section": "",
    "text": "Taken from: http://www.sthda.com/english/wiki/ggplot2-histogram-plot-quick-start-guide-r-software-and-data-visualization Additional resources: https://ggplot2.tidyverse.org/reference/geom_histogram.html\n\n\n\nFirst, we need to install a good-quality graphical display library:\n\nIf you have not installed the ggplot2 package, you can do so by typing install.packages(\"ggplot2\"). Answer yes when prompted.\nType library(ggplot2) into the Console after the installation has finished - this loads the package into memory\n\n\n\n\nggplot is the basic graphing function that you will use over and over again.\nWe can create a basic histogram of the miles per gallon (a measure of fuel efficiency in automobiles) with:\nggplot(mtcars, aes(x=mpg)) + geom_histogram()\nThe ggplot function has three components:\n\nDataset being used (in this case, the built-in test dataset for R called mtcars)\nThe data you intend to display (named inside of the aes() part)\nThe type of graphical display you wish to make (appended after the ggplot() function with a + sign)\n\nHowever, the default ggplot settings often are not so great. In particular, the bindwidth for this histogram is not that well chosen.\nTo alter the binwidth, we can set each bin to equal a set number of mpg (miles per gallon):\nggplot(mtcars, aes(x=mpg)) + geom_histogram(binwidth=1)\n\nPlay around with the binwidth, try to find something that you feel accurately captures the distribution of the data.\n\n\nWhat is the shape, center, and spread of this data? Are there any outliers?\nHow does changing the binwidth affect your answers to these questions?\n\nTo properly label the graph, we add the following amendments:\nggplot(mtcars, aes(x=mpg)) + geom_histogram() + labs(x\"MPG\", y=\"Count\", title=\"MPG of the cars in this dataset\")\nYou can see here that additional layers on top of the graph are created with each + sign. So the first part of the ggplot() function specifies the data to be used and the additional + each create a layer on top of the graph.\n\n\n\nNow maybe we want to add a mean line. We can do so with the following command:\np <- ggplot(mtcars, aes(x=mpg)) +  geom_histogram() + labs(x=\"MPG\", y=\"Count\", title=\"MPG of the cars in this dataset\")\nIn this case, we are saving the output of the graph to a new variable, called p\nNow we can add a vertical line at the mean of mpg with the following command:\np + geom_vline(aes(xintercept=mean(mpg)), color=\"red\", linetype=\"dashed\", size=1)\nOr we can change the histogram type to be a density plot instead of a count plot:\np <- ggplot(mtcars, aes(x=mpg)) + geom_histogram(aes(y = ..density..)) + labs(x=\"MPG\", y=\"Density\", title=\"MPG of the cars in this dataset\")\nNote that this overwrites the previous value of p\n\nThink about the difference between a density plot and the previous plots we have produced\n\nYou can then overlay a density layer to get another view of the distribution of the data:\np + geom_density(alpha=.2, fill=\"#FF6666\")\n\n\n\nWe can also differentiate mpg by a categorical variable (number of cylinders in a car) via the following steps:\n\nFirst, we need to let R know that cyl is a categorical variable\n\nmtcars$cyl <- factor(mtcars$cyl)\nR generally does not know if a variable is a categorical one or not unless you tell it directly. factor() is the method of converting a quantitative variable to a categorical variable.\n\nThen we can create histograms that vary by cylinder:\n\nggplot(mtcars, aes(x=mpg, color=cyl))  +  geom_histogram(fill=\"white\") + labs(x=\"MPG\", y=\"Count\", title=\"MPG of cars in the MPG Dataset\")\nHere the color aspect of aes() indicates that the color should be changed according to each group of the variable cylinder\n\nPlay around with the binwidth and add a density layer. How would you interpret this new information?\n\n\nNext we want to create group means for each cylinder (i.e. what is the mean weight of each category of cylinders). To do so, we need the following commands (don’t worry about understanding it, we’ll learn more about this later):\n\nlibrary(plyr)\nmu <- ddply(mtcars, \"cyl\", summarise, grp.mean=mean(mpg))\nhead(mu)\nYou should get the following output:\n  cyl grp.mean\n1   4 26.66364\n2   6 19.74286\n3   8 15.10000\nNow we can add a mean line to each of the categories:\nggplot(mtcars, aes(x=mpg, color=cyl))  + geom_histogram(fill=\"white\") + labs(x=\"MPG\", y=\"Count\", title=\"MPG of cars in the MPG Dataset\") + geom_vline(data=mu, aes(xintercept=grp.mean, color=cyl), linetype=\"dashed\")\n\n\n\n\nTo learn more about each of the variables in the dataset, you can examine the dataset (and any function documentation in R) by entering ?mtcars\nFor the variables hp and wt, estimate or guess the shape, center and spread of the variables before examining your data. You can think about the following characteristics while you consider the issue:\n\nShape\n\nSkew\nModes\n\nCenter\n\nMean\nMedian\n\nSpread\n\nRange\nIQR\nStandard deviation\n\n\nNext, create some histograms to assess whether you are correct or not.\nAlso think about:\n\nDo you think either of these variables meaningfully vary in their distribution by one of the categorical variables? Why or why not?\nDo you see any outliers? Would either of these variables benefit from reexpressions?"
  }
]