ggplot(mtcars, aes(x=mpg)) + geom_histogram()
library(ggplot2)
ggplot(mtcars, aes(x=mpg)) + geom_histogram()
?labs()
ggplot(mtcars, aes(x=mpg)) + geom_histogram(binwidth=1)
p <- ggplot(mtcars, aes(x=mpg)) +  geom_histogram() + labs(xlab="Weight", ylab="Count", title="MPG of the cars in this dataset") + ylab("Count")
p + geom_vline(aes(xintercept=mean(mpg)), color="red", linetype="dashed", size=1)
p <- ggplot(mtcars, aes(x=mpg)) +  geom_histogram() + labs(xlab="MPG", ylab="Count", title="MPG of the cars in this dataset") + ylab("Count")
p
?labs()
p <- ggplot(mtcars, aes(x=mpg)) +  geom_histogram() + labs(xlab="MPG", ylab="Count", title="MPG of the cars in this dataset")
p
?labs()
p <- ggplot(mtcars, aes(x=mpg)) +  geom_histogram() + labs(x="MPG", y="Count", title="MPG of the cars in this dataset")
p
p + geom_density(alpha=.2, fill="#FF6666")
?geom_density()
?mtcars
p + stat_histogram(aes(y = ..density..))
?geom_histogram
p + stat_bin(aes(y = ..density..)
)
?geom_histogram()
p + stat_count(aes(y = ..density..)
)
p + geom_histogram(aes(y = ..density..))
p <- ggplot(mtcars, aes(x=mpg)) + geom_histogram(aes(y = ..density..)) + + labs(x="MPG", y="Count", title="MPG of the cars in this dataset")
p <- ggplot(mtcars, aes(x=mpg)) + geom_histogram(aes(y = ..density..)) + labs(x="MPG", y="Count", title="MPG of the cars in this dataset")
p
p + geom_density(alpha=.2, fill="#FF6666")`
)
p + geom_density(alpha=.2, fill="#FF6666")
mtcars
summary(mtcars)
?mtcars
data()
?cars
?sleep
?midwest
?txhousing
?HairEyeColor
mtcars$cyl <- factor(mtcars$cyl)
ggplot(mtcars, aes(x=mpg, color=cylinders))  +  geom_histogram(fill="white") + labs(x="MPG", title="MPG of cars in the MPG Dataset", y="Frequency")
ggplot(mtcars, aes(x=mpg, color=cyl))  +  geom_histogram(fill="white") + labs(x="MPG", title="MPG of cars in the MPG Dataset", y="Frequency")`
ggplot(mtcars, aes(x=mpg, color=cyl))  +  geom_histogram(fill="white") + labs(x="MPG", title="MPG of cars in the MPG Dataset", y="Frequency")
library(plyr)
mu <- ddply(auto.mpg, "cylinders", summarise, grp.mean=mean(weight))
library(plyr)
mu <- ddply(mtcars, "cyl", summarise, grp.mean=mean(weight))
library(plyr)
mu <- ddply(mtcars, "cyl", summarise, grp.mean=mean(mpg))
head(mu)
ggplot(mtcars, aes(x=mpg, color=cyl))  + geom_histogram(fill="white") + labs(x="MPG", y="Count", title="MPG of cars in the MPG Dataset") + geom_vline(data=mu, aes(xintercept=grp.mean, color=cylinders), linetype="dashed")
ggplot(mtcars, aes(x=mpg, color=cyl))  + geom_histogram(fill="white") + labs(x="MPG", y="Count", title="MPG of cars in the MPG Dataset") + geom_vline(data=mu, aes(xintercept=grp.mean, color=cyl), linetype="dashed")
sample(1:16, 1)
sample(1:16, 1)
sample(1:16, 1)
sample(1:16, 1)
sample(1:16, 1)
sample(1:12, 1)
sample(1:12, 1)
sample(1:12, 1)
sample(1:12, 2)
sample(1:12, 2)
sample(1:12, 2)
sample(1:12, 2)
sample(1:12, 2)
sample(1:12, 2)
sample(1:12, 2)
sample(1:8, 4)
sample(1:18, 4)
sample(1:14, 5)
sample(1:9, 4)
library(dplyr)
mtReg <- mtcars %>%
do(reg=lm(mpg~wt,data=.))
library(broom)
glance(mtReg)
tidy(mtReg)
summary(mtReg)
mtReg <- mtcars %>%
do(lm(mpg~wt,data=.))
rlang::last_trace()
mtReg <- lm(mpg ~ hp, data=mtcars)
tidy(mtReg)
glance(mtReg)
mt.cars.resids <- augment(mtReg, mtcars)
library(ggplot2)
ggplot(mt.cars.resids, aes(x=.fitted, y.resid)) + geom_point()
ggplot(mt.cars.resids, aes(x=.fitted, y=.resid)) + geom_point()
ggplot(mt.cars.resids, aes(x=hp, y=.resid)) + geom_point()
ggplot(mt.cars.resids, aes(x=.fitted, y=.resid)) + geom_point()
library(modelsummary)
library(kableExtra)
modelsummary(mtReg)
mtReg.cyl <- lm(mpg~cyl, data=mtcars)
models <- list(
"Horsepower" = mtReg,
"Cylinders" = mtReg.cyl
)
modelsummary(models)
glance(mtReg)
tidy(mtReg)
install.packages("visreg")
View(mtReg.cyl)
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(message = FALSE)
library(tidyverse)
library(knitr)
library(broom)
library(gridExtra)
library(learnr)
theme_set(theme_classic())
classroster <- read.csv("www/classroster.csv", fileEncoding="UTF-8-BOM")
qnorm(0.995)
((sqrt(0.15*0.85) * 2.575) / 0.05)^2
((sqrt(0.15*0.85) * 2.8) / 0.05)^2
((sqrt(0.15*0.85) * 2.8) / 0.10)^2
qnorm(0.99)
qnorm(0.9975)
#| label: setup
#| include: false
# put your setup code here
kc.house <- read.csv("/Users/awm31/Github/dkustats101spring2023/activities/Lecture\ 3.2/king.county.sales.recent.csv")
devtools::install_github('andykrause/kingCoData')
install.packages("devtools")
devtools::install_github('andykrause/kingCoData')
explain("area")
?kingCoData
data(kingco_sales)
#| label: setup
#| include: false
# put your setup code here
rental.house <- read.csv("/Users/awm31/Github/dkustats101spring2023/activities/Lecture\ 3.2/Equity_Apartments_Data.csv")
#| label: setup
#| include: false
# put your setup code here
rental.house <- read.csv("/Users/awm31/Github/dkustats101spring2023/activities/Lecture\ 3.2/Equity_Apartments_Data.csv")
rental.house <- df[complete.cases(rental.house), ]
#| label: setup
#| include: false
# put your setup code here
rental.house <- read.csv("/Users/awm31/Github/dkustats101spring2023/activities/Lecture\ 3.2/Equity_Apartments_Data.csv")
rental.house <- rental.house[complete.cases(rental.house), ]
#| label: setup
#| include: false
# put your setup code here
rental.house <- read.csv("/Users/awm31/Github/dkustats101spring2023/activities/Lecture\ 3.2/Equity_Apartments_Data.csv")
rental.house <- rental.house[complete.cases(rental.house), ]
write.csv(rental.house, file="Equity_Apartments_Data_cleaned.csv")
table(rental.house$City)
?sample
vehicles <- read.csv("~/Github/dkustats101spring2023/homeworks/Unit 3 Homework/vehicles.csv")
View(vehicles)
table(vehicles$region)
library(dplyr)
vehicles.sp <- vehicles %>%
filter(region=="springfield")
View(vehicles.sp)
library(dplyr)
vehicles.sp <- vehicles %>%
filter(region=="springfield") %>%
filter(state="ma")
vehicles.sp <- vehicles %>%
filter(region=="springfield") %>%
filter(state=="ma")
table(vehicles$region)
vehicles.sp <- vehicles %>%
filter(region=="westernmass")
vehicles.sp <- vehicles %>%
filter(region=="western massachusetts")
table(vehicles$posting_date)
?lubridate
library(dplyr)
library(lubridate)
vehicles <- vehicles %>%
mutate(year = year(posting_date))
vehicles <- vehicles %>%
mutate(year = year(ymd_hms(posting_date)))
table(vehicles$year)
table(vehicles$manufacturer)
vehicles <- vehicles %>%
mutate(year = year(ymd_hms(posting_date))) %>%
mutate(origin = case_when(manufacturer == "buick" ~ "domestic",
manufacturer == "cadillac" ~ "domestic",
manufacturer == "chevorlet" ~ "domestic",
manufacturer == "chrysler" ~ "domestic",
manufacturer == "dodge" ~ "domestic",
manufacturer == "ford" ~ "domestic",
manufacturer == "gmc" ~ "domestic",
manufacturer == "harley-davidson" ~ "domestic",
manufacturer == "jeep" ~ "domestic",
manufacturer == "lincoln" ~ "domestic",
manufacturer == "mercury" ~ "domestic",
manufacturer == "pontiac" ~ "domestic",
manufacturer == "ram" ~ "domestic",
manufacturer == "saturn" ~ "domestic",
manufacturer == "tesla" ~ "domestic",
manufacturer == "" ~ NA,
manufacturer == TRUE ~ "foreign"))
table(vehicles$origin)
vehicles <- read.csv("~/Github/dkustats101spring2023/homeworks/Unit 3 Homework/vehicles.csv")
vehicles <- vehicles %>%
mutate(year = year(ymd_hms(posting_date))) %>%
mutate(origin = case_when(manufacturer == "buick" ~ "domestic",
manufacturer == "cadillac" ~ "domestic",
manufacturer == "chevorlet" ~ "domestic",
manufacturer == "chrysler" ~ "domestic",
manufacturer == "dodge" ~ "domestic",
manufacturer == "ford" ~ "domestic",
manufacturer == "gmc" ~ "domestic",
manufacturer == "harley-davidson" ~ "domestic",
manufacturer == "jeep" ~ "domestic",
manufacturer == "lincoln" ~ "domestic",
manufacturer == "mercury" ~ "domestic",
manufacturer == "pontiac" ~ "domestic",
manufacturer == "ram" ~ "domestic",
manufacturer == "saturn" ~ "domestic",
manufacturer == "tesla" ~ "domestic",
manufacturer == "" ~ NA,
.default ~ "foreign"))
library(dplyr)
library(lubridate)
vehicles <- vehicles %>%
mutate(year = year(ymd_hms(posting_date))) %>%
mutate(origin = case_when(manufacturer == "buick" ~ "domestic",
manufacturer == "cadillac" ~ "domestic",
manufacturer == "chevorlet" ~ "domestic",
manufacturer == "chrysler" ~ "domestic",
manufacturer == "dodge" ~ "domestic",
manufacturer == "ford" ~ "domestic",
manufacturer == "gmc" ~ "domestic",
manufacturer == "harley-davidson" ~ "domestic",
manufacturer == "jeep" ~ "domestic",
manufacturer == "lincoln" ~ "domestic",
manufacturer == "mercury" ~ "domestic",
manufacturer == "pontiac" ~ "domestic",
manufacturer == "ram" ~ "domestic",
manufacturer == "saturn" ~ "domestic",
manufacturer == "tesla" ~ "domestic",
manufacturer == "" ~ NA,
.default ~ "foreign"))
vehicles <- read.csv("~/Github/dkustats101spring2023/homeworks/Unit 3 Homework/vehicles.csv")
vehicles <- vehicles %>%
mutate(year = year(ymd_hms(posting_date))) %>%
mutate(origin = case_when(manufacturer == "buick" ~ "domestic",
manufacturer == "cadillac" ~ "domestic",
manufacturer == "chevorlet" ~ "domestic",
manufacturer == "chrysler" ~ "domestic",
manufacturer == "dodge" ~ "domestic",
manufacturer == "ford" ~ "domestic",
manufacturer == "gmc" ~ "domestic",
manufacturer == "harley-davidson" ~ "domestic",
manufacturer == "jeep" ~ "domestic",
manufacturer == "lincoln" ~ "domestic",
manufacturer == "mercury" ~ "domestic",
manufacturer == "pontiac" ~ "domestic",
manufacturer == "ram" ~ "domestic",
manufacturer == "saturn" ~ "domestic",
manufacturer == "tesla" ~ "domestic",
manufacturer == "" ~ NA,
.default = "foreign"))
table(vehicles$origin)
summary(vehicles$origin)
n_miss(vehicles$origin)
library(narnia)
library(naniar)
n_miss(vehicles$origin)
table(vehicles.sp$type)
table(vehicles.sp$condition)
table(vehicles.sp$fuel)
table(vehicles.sp$city)
table(vehicles.sp$title_status)
table(vehicles.sp$cylinders)
table(vehicles.sp$transmission)
table(vehicles.sp$drive)
table(vehicles.sp$type)
hist(mtcars$qsec)
table(mtcars$qsec)
dcbikes <- read.csv("~/Github/dkustats101spring2023/labs/Lab 3.1/dcbikes.csv")
View(dcbikes)
sample(dcbikes$temp, 50, replace=TRUE)
save(dcbikes)
save(dcbikes, file="dcbikes.Rds")
save(vehicles, file="vehicles.Rds")
vehicles.pop <- vehicles[sample(nrow(vehicles, 124322)),]
vehicles.pop <- vehicles[sample(nrow(vehicles), 124322),]
table(vehicles.pop$region)
vehicles.pop <- vehicles[sample(nrow(vehicles), 42688),]
table(vehicles.pop$region)
save(vehicles.pop, file="vehicles.Rds")
library(dplyr)
kc.house <- kc.house %>%
mutate(view = view_rainier +
view_olympics +
view_cascades +
view_territorial +
view_skyline +
view_sound +
view_lakewash +
view_lakesamm +
view_otherwater +
view_other)
table(kc.house$view)
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(message = FALSE)
library(tidyverse)
library(knitr)
library(broom)
library(gridExtra)
library(scales)
library(learnr)
theme_set(theme_classic())
set.seed(1234567)
options(scipen=999)
mean.multiple.samples <- function(numdraws, numsamples, variable) {
meanvector <- c()
meanonesample <- 0
for (i in 1:numsamples) {
meanonesample <- mean(sample(variable, numdraws, replace=TRUE))
meanvector[i] <- meanonesample
}
meanvector
}
kc.house <- read.csv("www/king.county.sales.recent.csv")
